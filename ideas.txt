
✓ Reset position of the ball
✓ Infinite amount of bricks (moving when the bottom row is destroyed)
    - Numerical stability improvement
    - Move multiple rows at the same time
    - Move *after* the last block dissapears

- Increase speed every time the row at the bottom is destroyed
- Blinking last life
✓ Game over screen
✓ Score board
    ✓ Local storage/browser storage
    - Set focus to edit box
    - Store the board in the blob storage
- Bonuses (the bonus is visible on the brick, the bonus is a new ball it's not falling down but is following some trajectory)
    - Widen/shorten
    - Extra balls (collisions between balls)
    - Double points
    - Temporal slow down/speed up
    - Future prediction
    - Blockage (effortless gameplay)
✓ Remove 80% upscaling
✓ Add warning that the scored cannot be removed (after published anonymously)
- Garbage collect empty names in scoreboard
- Fix collisions when bat pushes the ball
✓ Scalable fonts
✓ Scalable content
✓ Remove renderable
✓ Make 726 * 968 a constant
- Motion blur
- Bent bat
- Pause ?
- Fix unwrap error when the scoreboard editbox is autocompleted
- Add music / sfx
- Shining bricks effect
- More kinds of bricks
    - Procedurally generate the bricks (with the same seed value)
- Touch input / mobile control
    - The scoreboard doesn't work on mobile


- Improve hardcoded secrets handling:
    - **/connection-string.fn
    ✓ Change **/admin-credentials.fn to database stored password.
    ✓ move admin credentials to database
    ✓ change the hashing function to Argon2
        ✓ https://en.wikipedia.org/wiki/Base64#Radix-64_applications_not_compatible_with_Base64

- Publish on the internet
    - Add adds
    ✓ Buy domain
    ✓ Buy hosting

- Refactoring
    - Consolidate usages of dyn_into::<HtlmElement>
    - Do not ignore errors, especialy from functions executed on executor.
    - Do something with Response<Option<T>> in api tests (maybe new response type)